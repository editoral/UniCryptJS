
[0m[0m
[0m  Class declaration and inheritance[0m
[2K[0G  [32m  âˆš[0m[90m checks typing correctness in constructor[0m
[2K[0G  [32m  âˆš[0m[90m checks typing correctness in function parameter int[0m
[2K[0G  [32m  âˆš[0m[90m checks typing correctness in function parameter int[0m
[2K[0G  [32m  âˆš[0m[90m checks typing correctness in function parameter boolean[0m
[2K[0G  [32m  âˆš[0m[90m checks typing correctness in function parameter string[0m
[2K[0G  [32m  âˆš[0m[90m checks typing correctness in function parameter working[0m
[2K[0G  [32m  âˆš[0m[90m checks typing correctness wrong nr of params[0m
[2K[0G  [32m  âˆš[0m[90m checks typing correctness in function parameter with named classes[0m
[2K[0G  [32m  âˆš[0m[90m checks typing correctness in function parameter with named classes working[0m
[2K[0G  [32m  âˆš[0m[90m test typing correctness of return value[0m
[2K[0G  [32m  âˆš[0m[90m test typing correctness of return value 2[0m
[2K[0G  [32m  âˆš[0m[90m tests correctness of properties in Baseclass[0m
[2K[0G  [32m  âˆš[0m[90m tests correctness of properties in ChildClass[0m
[2K[0G  [32m  âˆš[0m[90m tests correctness of overwriting properties in ChildClass[0m
[2K[0G  [32m  âˆš[0m[90m tests constructor and superconstructor in ChildClass[0m
[2K[0G  [32m  âˆš[0m[90m [0m

[0m  Function overloading[0m
[2K[0G  [31m  1) tests overload with int param[0m

[0m  A first example[0m
[2K[0G  [32m  âˆš[0m[90m will write names but can't[0m
[2K[0G  [32m  âˆš[0m[90m will now have instance variables[0m
[2K[0G  [32m  âˆš[0m[90m calls a private function[0m
[2K[0G  [32m  âˆš[0m[90m it calls a privileged function[0m

[0m  wie ich die closures und Instatntiirung teste[0m
[2K[0G  [32m  âˆš[0m[90m benutzt meine Klasse nicht als Klasse[0m
[2K[0G  [32m  âˆš[0m[90m will nun das SchlÃ¼sselwort new brauchen[0m
[2K[0G  [32m  âˆš[0m[90m probiert eine private Variable abzugreifen[0m
[2K[0G  [32m  âˆš[0m[90m kann drei Fahrzeuge geben[0m
[2K[0G  [32m  âˆš[0m[90m kann keine 4 Fahrzeuge geben[0m
[2K[0G  [32m  âˆš[0m[90m benutzt eine privileged Methode um den Ã¶lstand zu sehen[0m

[0m  wie ich die Vererbung teste[0m
[2K[0G  [32m  âˆš[0m[90m testet ob der Konstruktor der Basisklasse Fahrzeug bei der Erstellung eines Autos aufgerufen wird[0m
[2K[0G  [32m  âˆš[0m[90m auto ist ein Fahrzeug[0m
[2K[0G  [32m  âˆš[0m[90m hat die Mehtode mein Treibstoff Ã¼berschrieben[0m
[2K[0G  [32m  âˆš[0m[90m auto kann die Mehtode von Fahrzeug brauchen[0m
[2K[0G  [32m  âˆš[0m[90m kann die eigenen Funktionen verwenden[0m
[2K[0G  [32m  âˆš[0m[90m akzeptiert nur einen Integer als Preis[0m
[2K[0G  [32m  âˆš[0m[90m wird selbst bei Aufruf als Funktion zu einer Instanz[0m

[0m  Das gebaute Interface[0m
[2K[0G  [32m  âˆš[0m[90m klappt mit der Instatntiirung wenn alle Methoden implementiert wurden[0m
[2K[0G  [32m  âˆš[0m[90m klappt mit der Instatntiirung nicht mehr wenn eine Methode vergessen wurde[0m

[0m  Typisierung mit Hammer[0m
[2K[0G  [32m  âˆš[0m[90m testet typisierung mit integer[0m
[2K[0G  [32m  âˆš[0m[90m testet typisierung nach objekttypen[0m

[0m  tests with Op FW classes generation and with typing[0m
[2K[0G  [32m  âˆš[0m[90m instantiiate a base class and get public attribute[0m
[2K[0G  [32m  âˆš[0m[90m instantiiate a base class and tests the constructor assignement[0m
[2K[0G  [32m  âˆš[0m[90m instantiiate a base class and tests a function[0m
[2K[0G  [32m  âˆš[0m[90m tests typing correctnes with integers in the constructor[0m
[2K[0G  [32m  âˆš[0m[90m tests typing correctnes with integers in a function param[0m
[2K[0G  [32m  âˆš[0m[90m tests typing correctnes with objects in a function param throwing Error[0m
[2K[0G  [32m  âˆš[0m[90m tests typing correctnes with objects in a function param working[0m

[0m  tests with Op FW inheritance[0m
[2K[0G  [32m  âˆš[0m[90m assigns a variable trough super constructor[0m
[2K[0G  [32m  âˆš[0m[90m checks for the super class attribute[0m
[2K[0G  [32m  âˆš[0m[90m checks for the super class function[0m

[0m  [0m
[2K[0G  [32m  âˆš[0m[90m [0m


[92m [0m[32m 48 passing[0m[90m (112ms)[0m
[31m  1 failing[0m

[0m  1) Function overloading tests overload with int param:
[0m[31m     TypeError: baseClass.func is not a function[0m[90m
      at Context.<anonymous> (C:\Users\marce\git\junicrypt\test\oopTest.js:188:32)
      at callFn (C:\Users\marce\git\junicrypt\node_modules\mocha\lib\runnable.js:286:21)
      at Test.Runnable.run (C:\Users\marce\git\junicrypt\node_modules\mocha\lib\runnable.js:279:7)
      at Runner.runTest (C:\Users\marce\git\junicrypt\node_modules\mocha\lib\runner.js:421:10)
      at C:\Users\marce\git\junicrypt\node_modules\mocha\lib\runner.js:528:12
      at next (C:\Users\marce\git\junicrypt\node_modules\mocha\lib\runner.js:341:14)
      at C:\Users\marce\git\junicrypt\node_modules\mocha\lib\runner.js:351:7
      at next (C:\Users\marce\git\junicrypt\node_modules\mocha\lib\runner.js:283:14)
      at Immediate._onImmediate (C:\Users\marce\git\junicrypt\node_modules\mocha\lib\runner.js:319:5)
[0m


